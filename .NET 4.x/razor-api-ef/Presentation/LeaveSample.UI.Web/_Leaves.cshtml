@using LeaveSample.Entities
@using LeaveSample.UI.Process;
@{
    var upc = new LeaveController();

    // Cancel the leave.
    if (IsPost)
    {
         if (!Request.Form["_Action"].IsEmpty())
         {
             var leave = new Leave()
             {
                 LeaveID = Convert.ToInt64(Request.Form["_LeaveID"]),
                 CorrelationID = Guid.Parse(Request.Form["_CorrelationID"]),
                 StartDate = Request.Form["_StartDate"].AsDateTime(),
                 EndDate = Request.Form["_EndDate"].AsDateTime(),
                 Duration = Convert.ToByte(Request.Form["_Duration"]),
             };

             upc.Cancel(leave);
         }
        
    }
    
    var grid = new WebGrid();
    
    int rowCount = 0;

    string sort = Request.QueryString["sort"].IsEmpty() ? "DateSubmitted" : Request.QueryString["sort"];
    string sortDir = Request.QueryString["sortDir"].IsEmpty() ? "DESC" : Request.QueryString["sortDir"];
    string categoryValue = Request.QueryString["category"];
    string statusValue = Request.QueryString["status"];

    int pageNo = Request.QueryString["page"].AsInt();
    int startRowIndex = pageNo > 0 ? (pageNo - 1) * 10 : 0;

    LeaveCategories? category = null;
    if (!string.IsNullOrWhiteSpace(categoryValue) && categoryValue != "- All -")
    {
        category = Enum.Parse(typeof(LeaveCategories), categoryValue) as LeaveCategories?;
    }

    LeaveStatuses? status = null;
    if (!string.IsNullOrWhiteSpace(statusValue) && statusValue != "- All -")
    {
        status = Enum.Parse(typeof(LeaveStatuses), statusValue) as LeaveStatuses?;
    }

    var leaves = upc.ListLeavesByEmployee(10, startRowIndex, string.Format("{0} {1}", sort, sortDir),
        Environment.UserName, category, status, out rowCount);
        
    grid.Bind(leaves, autoSortAndPage: false, rowCount: rowCount);

    grid.SortColumn = sort;
    grid.SortDirection = sortDir == "DESC" ? SortDirection.Descending : SortDirection.Ascending;
}

<script>
    $(function () {

        $('.cancel-leave').on('click', function () {

            var tr = $(this).closest('tr');
            var form = document.forms['gridForm'];

            postForm(form, {
                _Action: 'Cancel',
                _LeaveID: tr.find('#LeaveID').val(),
                _CorrelationID: tr.find('#CorrelationID').val(),
                _StartDate: tr.find('.StartDate').text(),
                _EndDate: tr.find('.EndDate').text(),
                _Duration: tr.find('.Duration').text(),
            })
        });
    });

    function postForm(form, params) {

        for (var key in params) {
            var hidden = document.createElement("input");
            hidden.type = "hidden";
            hidden.name = key;
            hidden.value = params[key];

            form.appendChild(hidden);
        }

        form.submit();
    }
</script>
<fieldset>
    <legend class="header">Leave Records</legend>
    <form method="get">
        <table>
            <tr>
                <td style="width:75px"><strong>Category</strong></td>
                <td><strong>:</strong></td>
                <td style="width:100px">
                    @PageHelpers.GetDropDownList("category", categoryValue, typeof(LeaveCategories))
                </td>
                <td style="width:40px"></td>
                <td style="width:75px"><strong>Status</strong></td>
                <td><strong>:</strong></td>
                <td style="width:100px">
                    @PageHelpers.GetDropDownList("status", statusValue, typeof(LeaveStatuses))
                </td>
                <td style="width: 70px"></td>
                <td>
                    <input type="submit" value="Refresh" />
                </td>
            </tr>
        </table>
    </form>
    <form name="gridForm" method="post">
        @grid.GetHtml(
            tableStyle: "grid", alternatingRowStyle: "grid-alt-row",

            columns: grid.Columns(
                grid.Column("Action", "Action", @<text>
                @if (@item.Status == LeaveStatuses.Pending)
                {
                    <a href="javascript:;" class="cancel-leave">Cancel</a>
                }
                <input id="LeaveID" type="hidden" value="@item.LeaveID" />
                <input id="CorrelationID" type="hidden" value="@item.CorrelationID" />
                </text>, "center-text", false),

              grid.Column("Category", style: "center-text Category"),
              grid.Column("StartDate", "Start Date", x => string.Format("{0:d}", x.StartDate), "center-text StartDate"),
              grid.Column("EndDate", "End Date", x => string.Format("{0:d}", x.EndDate), "center-text EndDate"),
              grid.Column("Duration", style: "center-text Duration"),
              grid.Column("Status", style: "center-text Status"),
              grid.Column("DateSubmitted", "Date Submitted", style: "center-text DateSubmitted"),
              grid.Column("Description", style: "Description", canSort: false),
              grid.Column("Remarks", style: "Remarks", canSort: false)
            )
        )
    </form>
</fieldset>